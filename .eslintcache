[{"C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\index.js":"1","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\App.js":"2","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\Sidebar.js":"3","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\SidebarChat.js":"4","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\Chat.js":"5","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\firebase.js":"6","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\Login.js":"7","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\StateProvider.js":"8","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\reducer.js":"9"},{"size":358,"mtime":1611478635784,"results":"10","hashOfConfig":"11"},{"size":832,"mtime":1611478152002,"results":"12","hashOfConfig":"11"},{"size":1921,"mtime":1611484292460,"results":"13","hashOfConfig":"11"},{"size":1471,"mtime":1611483666657,"results":"14","hashOfConfig":"11"},{"size":6282,"mtime":1611549658935,"results":"15","hashOfConfig":"11"},{"size":669,"mtime":1611511030880,"results":"16","hashOfConfig":"11"},{"size":1047,"mtime":1611483666655,"results":"17","hashOfConfig":"11"},{"size":375,"mtime":1611478648950,"results":"18","hashOfConfig":"11"},{"size":375,"mtime":1611479388218,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1swciza",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\index.js",[],["44","45"],"C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\App.js",["46","47"],"import { React, useState } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Components/Sidebar\";\nimport Chat from \"./Components/Chat\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app_body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\Sidebar.js",["48","49","50","51","52"],"import { React, useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./../firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [rooms, setRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribedata = db.collection(\"rooms\").onSnapshot((snap) =>\r\n      setRooms(\r\n        snap.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n    return () => {\r\n      unsubscribedata();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar_header\">\r\n        <Avatar src={user?.photoURL} />\r\n        <div className=\"sidebar_info\">\r\n          <h2>{user.displayName}</h2>\r\n        </div>\r\n        {/* <div className=\"sidebar_headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"sidebar_search\">\r\n        <div className=\"sidebar_searchContainer\">\r\n          <SearchOutlinedIcon />\r\n          <input type=\"text\" placeholder=\"search message\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_chat\">\r\n        <SidebarChat addnewChat />\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\SidebarChat.js",[],"C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\Chat.js",["53","54","55"],"import React, { useEffect, useRef } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\n// import SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\n// import AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\n// import MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n// import InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CameraIcon from \"@material-ui/icons/Camera\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport db, { storage } from \"./../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport Webcam from \"react-webcam\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst videoConstraints = {\r\n  width: 550,\r\n  height: 400,\r\n  facingMode: \"user\",\r\n};\r\nfunction Chat() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [seed, setSeed] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [messages, setMessages] = React.useState([]);\r\n  const [roomName, setRoomName] = React.useState(\"\");\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const location = useLocation();\r\n  const webcamRef = useRef(null);\r\n  const [image, setImage] = React.useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    const id = uuid();\r\n    const uploadTask = storage\r\n      .ref(`posts/${id}`)\r\n      .putString(imageSrc, \"data_url\");\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      null,\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"posts\")\r\n          .child(id)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            // console.log(\"URL: \" + url);\r\n            setImage(url);\r\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n              message: null,\r\n              name: user.displayName,\r\n              imageUrl: url,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n          });\r\n      }\r\n    );\r\n    setOpen(false);\r\n  }, [webcamRef]);\r\n  const scrollToBottom = () => {\r\n    console.log(messagesEndRef);\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  let roomId = location.pathname.split(\"/rooms/\", 2)[1];\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n    scrollToBottom();\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(`You Typed>>>> ${input}`);\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  const captureImage = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat_header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat_headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toLocaleString()}\r\n          </p>\r\n        </div>\r\n        {/* <div className=\"chat_headerRight\">\r\n          <IconButton>\r\n            <SearchOutlinedIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"chat_body\" ref={messagesEndRef}>\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat_message ${\r\n              message.name === user.displayName && \"chat_reciever\"\r\n            }`}\r\n            key={Math.random()}\r\n          >\r\n            <span className=\"chat_name\">{message.name}</span>\r\n            {message.message}\r\n            {message.imageUrl && (\r\n              <img\r\n                src={message.imageUrl}\r\n                alt=\"Message\"\r\n                width=\"120\"\r\n                height=\"120\"\r\n              />\r\n            )}\r\n            <span className=\"chat_time\">\r\n              {new Date(message.timestamp?.toDate()).toLocaleString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat_footer\">\r\n        <IconButton onClick={() => captureImage()}>\r\n          <CameraIcon />\r\n        </IconButton>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            placeholder=\"type a message\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send Message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <DialogContent>\r\n          <Webcam\r\n            height={videoConstraints.height}\r\n            audio={false}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            width={videoConstraints.width}\r\n            videoConstraints={videoConstraints}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={capture} color=\"primary\">\r\n            Capture and Send Image\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\firebase.js",["56"],"import firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAcDOr7vCJd4uPfrMeis_eFZtteScLh99s\",\r\n  authDomain: \"react-chatapp-93746.firebaseapp.com\",\r\n  projectId: \"react-chatapp-93746\",\r\n  storageBucket: \"react-chatapp-93746.appspot.com\",\r\n  messagingSenderId: \"551109557810\",\r\n  appId: \"1:551109557810:web:4ef57e750b4dd0c20b462b\",\r\n  measurementId: \"G-GKXR37GJFP\",\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport { auth, provider, storage };\r\n\r\nexport default db;\r\n","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\Components\\Login.js",["57"],"import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport \"./Login.css\";\r\nimport { useStateValue } from \"./../StateProvider\";\r\nimport { actionType } from \"../reducer\";\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue();\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: actionType.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_container\">\r\n        <img\r\n          src=\"https://image.winudf.com/v2/image1/Y29tLmNpcC5teWNoYXQubXlhbm1hcl9pY29uXzE1NTc3MTIwNDZfMDE2/icon.png?w=170&fakeurl=1\"\r\n          alt=\"login whatsApp\"\r\n        />\r\n        <div className=\"login_text\">\r\n          <h2>Sign In to WhatsApp</h2>\r\n        </div>\r\n        <Button onClick={signIn}>Sign In with Google</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\StateProvider.js",[],"C:\\Users\\Lavlesh\\Desktop\\git-demo\\react-chat\\react-chatapp\\src\\reducer.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":10,"column":20,"nodeType":"64","messageId":"65","endLine":10,"endColumn":28},{"ruleId":"62","severity":1,"message":"67","line":3,"column":18,"nodeType":"64","messageId":"65","endLine":3,"endColumn":28},{"ruleId":"62","severity":1,"message":"68","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":16},{"ruleId":"62","severity":1,"message":"69","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":22},{"ruleId":"62","severity":1,"message":"70","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":20},{"ruleId":"62","severity":1,"message":"66","line":13,"column":20,"nodeType":"64","messageId":"65","endLine":13,"endColumn":28},{"ruleId":"62","severity":1,"message":"66","line":31,"column":20,"nodeType":"64","messageId":"65","endLine":31,"endColumn":28},{"ruleId":"62","severity":1,"message":"71","line":34,"column":10,"nodeType":"64","messageId":"65","endLine":34,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":66,"column":6,"nodeType":"74","endLine":66,"endColumn":17,"suggestions":"75"},{"ruleId":"62","severity":1,"message":"76","line":11,"column":7,"nodeType":"64","messageId":"65","endLine":11,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":9,"column":10,"nodeType":"79","messageId":"80","endLine":9,"endColumn":12},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'IconButton' is defined but never used.","'ChatIcon' is defined but never used.","'DonutLargeIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'image' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'roomId' and 'user.displayName'. Either include them or remove the dependency array.","ArrayExpression",["83"],"'firebaseApp' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [roomId, user.displayName]",{"range":"86","text":"87"},[2417,2428],"[roomId, user.displayName]"]